<Window x:Class="Snoop.OptionsDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Snoop"
        xmlns:converters="clr-namespace:Snoop.Converters"
        mc:Ignorable="d"
        Title="OptionsDialog"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        AllowsTransparency="True"
        Background="Transparent" 
        Topmost="True"
        >
    <Window.Resources>
        <LinearGradientBrush x:Key="bBackground" EndPoint="0,0" StartPoint="3,3" 
                     MappingMode="Absolute" SpreadMethod="Repeat">
            <GradientStop Color="#AA7E7E7E" Offset="0" />
            <GradientStop Color="#AA7E7E7E" Offset="0.3" />
            <GradientStop Color="#5F323232" Offset="0.3" />
            <GradientStop Color="#5F323232" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="#FF8B8B8B"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="Border" Background="Transparent" BorderBrush="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" BorderThickness="2" Padding="10">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="#FFA5A5A5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="#FF297BDC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="1"  SnapsToDevicePixels="true" Background="#FFFF3B3B" BorderBrush="#FFA70101">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFF75858"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFF73333"/>
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="1"  SnapsToDevicePixels="true" Background="#FF449FFF" BorderBrush="#FF297BDC">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF297BDC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF297BDC"/>
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid TextElement.Foreground="#FF8B8B8B" Margin="10" TextElement.FontFamily="Segoe UI" >
        <Grid>
            <Border Background="#FF297BDC" Margin="10" x:Name="Shadow">
                <Border.Effect>
                    <BlurEffect Radius="10" RenderingBias="Quality"/>
                </Border.Effect>
            </Border>
            <Border Background="#FF323232" BorderBrush="{Binding ElementName=Shadow, Path=Background}" BorderThickness="1" Margin="10"/>
        </Grid>
        <StackPanel Margin="30" >
            <TextBlock Text="SNOOP OPTIONS" HorizontalAlignment="Center" Margin="0,0,0,10" FontWeight="Bold"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <RadioButton Grid.Column="0" GroupName="pinned" IsChecked="{Binding Source={x:Static  local:RegistrySettings.PinnedView}, Mode=OneTime}" Checked="OnPinnedViewChecked" Style="{DynamicResource RadioButtonStyle1}">
                    <StackPanel>
                        <Grid Width="130" Height="50">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0,0,0,3" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="6" BorderBrush="Gray" Background="{StaticResource bBackground}"/>
                            <Border BorderThickness="0,0,0,0" Grid.Row="0" Grid.Column="1" BorderBrush="Gray" Background="{StaticResource bBackground}"/>
                            <Border BorderThickness="0,0,3,0" Grid.Row="1" Grid.Column="1" Grid.RowSpan="5" BorderBrush="Gray" Background="{StaticResource bBackground}"/>
                            <Border BorderThickness="2" Grid.Row="1" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1" BorderBrush="#FF297BDC" Background="#5F323232"/>
                            <Border BorderThickness="2" Grid.Row="2" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1" BorderBrush="#FF297BDC" Background="#5F323232"/>
                            <Border BorderThickness="2" Grid.Row="3" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1" BorderBrush="#FF297BDC" Background="#5F323232"/>
                        </Grid>
                        <TextBlock Text="PINNED VIEW" HorizontalAlignment="Left" FontFamily="Segoe UI" Margin="0,7,0,0" FontWeight="Bold" FontStyle="Italic"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Grid.Column="1" GroupName="pinned" IsChecked="{Binding Source={x:Static  local:RegistrySettings.PinnedView}, Converter={converters:BooleanNegationConverter}, Mode=OneTime}" Checked="OnQuickViewChecked" Style="{DynamicResource RadioButtonStyle1}">
                    <StackPanel>
                        <Grid Width="130" Height="50">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="3" Grid.Row="3" Grid.Column="1" Grid.RowSpan="3" Grid.ColumnSpan="3" BorderBrush="Gray"  Background="{StaticResource bBackground}">
                            </Border>
                            <Border BorderThickness="3" Grid.Row="1" Grid.Column="2" Grid.RowSpan="4" Grid.ColumnSpan="4" BorderBrush="#FF297BDC" Background="#5F323232"/>
                            <Border BorderThickness="3" Grid.Row="4" Grid.Column="5" Grid.RowSpan="3" Grid.ColumnSpan="3" BorderBrush="Gray"  Background="{StaticResource bBackground}">
                            </Border>
                        </Grid>
                        <TextBlock Text="QUICK VIEW" HorizontalAlignment="Right" FontFamily="Segoe UI" Margin="0,7,0,0" FontWeight="Bold" FontStyle="Italic"/>
                    </StackPanel>
                </RadioButton>
            </Grid>
            <Grid Margin="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <Button Click="OnResetClick" Padding="4,10" Grid.Column="0" Margin="0,0,3,0" Style="{DynamicResource ButtonStyle1}" TextElement.Foreground="White" FontWeight="Bold" FontSize="10">
                    <TextBlock TextAlignment="Center">RESET<LineBreak/>OPTIONS</TextBlock>
                </Button>
                <Button Style="{StaticResource ButtonStyle2}" Foreground="White" Content="SAVE AND CLOSE" Click="OnCloseClick" Grid.Column="1" Margin="3,0,0,0" FontWeight="Bold" />
            </Grid>
        </StackPanel>
    </Grid>
</Window>
